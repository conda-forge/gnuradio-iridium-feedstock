{% set name = "gnuradio-iridium" %}
{% set version = "1.0.0" %}

package:
  name: {{ name|lower }}
  version: 1!{{ version }}

source:
  url: https://github.com/muccc/gr-iridium/archive/v{{ version }}.tar.gz
  sha256: 933f5fd18705ddd452547304b404cc36abe4acc1ad7d5c016ad16c0dd2254d86
  patches:
    - 0001-Drop-now-unused-unistd.h-include.patch
    - 0002-Don-t-override-GR_PYTHON_DIR.patch

build:
  number: 14
  run_exports:
    # three-segment date-based release, with no guarantee of API/ABI stability
    - {{ pin_subpackage('gnuradio-iridium', max_pin='x.x.x') }}

requirements:
  build:
    - {{ compiler('c') }}
    - {{ stdlib("c") }}
    - {{ compiler('cxx') }}
    - cmake
    - ninja
    - pkg-config
    # cross-compilation requirements
    - python                              # [build_platform != target_platform]
    - cross-python_{{ target_platform }}  # [build_platform != target_platform]
    - numpy                               # [build_platform != target_platform]
    - pybind11                            # [build_platform != target_platform]

  host:
    - gmp  # [linux]
    - gnuradio-core  # [not gnuradio_extra_pin]
    - gnuradio-core {{ gnuradio_extra_pin }}.*  # [gnuradio_extra_pin]
    - libboost-headers
    - pip  # [win]
    - pybind11
    - python
    - numpy
    - volk

  run:
    - numpy
    - python
    - scipy

test:
  commands:
    # verify that commands run
    # --help exits with -1, which wraps to 255 on linux/osx
    - iridium-extractor --help || ec=$?; if [ $ec -eq 255 ]; then true; else return $ec; fi  # [not win]
    - iridium-extractor --help || if ERRORLEVEL -1 if not ERRORLEVEL 0 cmd /c "exit /b 0"  # [win]

    # verify that (some) headers get installed
    - test -f $PREFIX/include/iridium/api.h  # [not win]
    - if not exist %PREFIX%\\Library\\include\\iridium\\api.h exit 1  # [win]

    # verify that libraries get installed
    - test -f $PREFIX/lib/lib{{ name }}${SHLIB_EXT}  # [not win]
    - if not exist %PREFIX%\\Library\\bin\\{{ name }}.dll exit 1  # [win]
    - if not exist %PREFIX%\\Library\\lib\\{{ name }}.lib exit 1  # [win]

    # verify that (some) GRC blocks get installed
    {% set blocks = ["iridium_burst_downmix", "iridium_frame_sorter"] %}
    {% set blocks = blocks + ["iridium_iridium_qpsk_demod"] %}

    {% for block in blocks %}
    - test -f $PREFIX/share/gnuradio/grc/blocks/{{ block }}.block.yml  # [not win]
    - if not exist %PREFIX%\\Library\\share\\gnuradio\\grc\\blocks\\{{ block }}.block.yml exit 1  # [win]
    {% endfor %}

  imports:
    - iridium

about:
  home: https://github.com/muccc/gr-iridium
  license: GPL-3.0-or-later
  license_family: GPL
  license_file: LICENSE
  summary: GNU Radio module providing an Iridium burst detector and demodulator
  description: >
    gr-iridium is a GNU Radio out-of-tree module with a collection of blocks to
    build an Iridium burst detector and demodulator. It provides a sample
    application which can be used to detect and demodulate data from the
    Iridium satellite network. You should also have a look at the
    iridium-toolkit.
  doc_url: https://github.com/muccc/gr-iridium
  dev_url: https://github.com/muccc/gr-iridium

extra:
  recipe-maintainers:
    - ryanvolz
